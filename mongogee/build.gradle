buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    }
}

version "0.4"
group "org.grails.plugins"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    console "org.grails:grails-console"
    profile "org.grails.profiles:plugin"
    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"
    testCompile "org.grails:grails-plugin-testing"

    compile "org.grails.plugins:mongodb:6.0.11"
    compile "org.reflections:reflections:0.9.9"  // annotation class reflection support
}

bootRun {
    jvmArgs = ['-Dspring.output.ansi.enabled=always']
}// enable if you wish to package this plugin as a standalone application
bootRepackage.enabled = false
grailsPublish {
    // load bintray user and key from jvm -Dvar for security
    user = System.getProperty('bintrayUser')
    key = System.getProperty('bintrayKey')
    githubSlug = 'ikaliZpet/mongogee'
    license {
        name = 'Apache-2.0'
    }
    title = "Mongogee Grails Plugin"
    desc = "Mongogee is a Grails plugin for MongoDB data migration management"
    developers = [binle: "Bin Le"]
//    portalUser =
//    portalPassword =
}
